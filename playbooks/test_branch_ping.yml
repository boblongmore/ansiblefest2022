---
- name: test that branch routers can ping core router
  hosts: branch
  gather_facts: false

  tasks:
    - name: gather ping information
      ansible.utils.cli_parse:
        command: ping 100.1.1.1
        parser:
          name: ansible.netcommon.pyats
        set_fact: ios_ping_core

    - name: print ping info
      ansible.builtin.debug:
        msg: "{{ ios_ping_core }}"

    - name: evaluate if ping is responsive
      block:
        - name: assert that pings are successful to rtr_core
          ansible.builtin.assert:
            that:
              - "{{ ios_ping_core.ping.statistics.received }} != 0"
            success_msg: " {{ inventory_hostname }} can ping rtr_core"

        - name: set fact for successful pings
          ansible.builtin.set_fact:
            ios_ping_result: { ping_result: passed }
      rescue:
        - name: set fact for unsuccessful pings
          ansible.builtin.set_fact:
            ios_ping_result: { ping_result: "{{ ios_ping_core.ping.statistics.received }}" }


    - name: add dict keys for router names
      ansible.builtin.set_fact:
        hostname_ping_result_data: "{{ ping_result_data | default ({}) | combine({inventory_hostname: ios_ping_result }) }}"

    - name: create one dictionary of default route data
      loop: >-
        {{
          groups['branch']
          | map("extract", hostvars)
          | map(attribute="hostname_ping_result_data")
          | list
          }}
      run_once: true
      ansible.builtin.set_fact:
        ping_result_data: "{{ ping_result_data | default ({}) | combine(item) }}"

    - name: set fact for use in workflow
      ansible.builtin.set_stats:
        data:
          ping_result_data: "{{ ping_result_data }}"
