---
- name: test ospf in CML
  hosts: routers
  gather_facts: false

  tasks:
    - name: set file path
      set_fact:
        file_path: "router-ospf.md"
      run_once: True

    - name: set file path
      set_stats:
        data:
          attachment_path: "{{ file_path }}"
      run_once: True

    - name: create documentation file
      ansible.builtin.file:
        path: "{{ file_path }}"
        state: touch
      run_once: True
  
    - name: parse show ip ospf neighbors
      ansible.utils.cli_parse:
        command: show ip ospf neighbor
        parser:
          name: ansible.netcommon.pyats
        set_fact: ospf_neighbors
      ignore_errors: true


    - name: determine if there are ospf neighbors
      block:
        # - name: check if error is returned for ospf neighbors
        #   debug:
        #     msg: "{{ ospf_neighbors['interfaces'] }}"
        - name: collect relevant interface data to create a report
          set_fact:
            ospf_neighbors: "{{ ospf_neighbors['interfaces'] | dict2items }}"
      rescue:
        - name: print which device has errors on show ip ospf neighbors
          debug:
            msg: "{{ inventory_hostname }} did not return ospf neighbors"

    - name: create document
      ansible.builtin.blockinfile:
        block: "{{ lookup('ansible.builtin.template', 'templates/rtr-ospf-nei.j2') }}"
        dest: "{{ file_path }}"
        marker: "{mark}"
        marker_begin: "router: {{inventory_hostname }}"
        marker_end: "****"
        insertafter: EOF

    - name: Change state of the incident
      servicenow.itsm.incident:
        number: INC0010005
        attachments:
         - path: "{{ file_path }}"
           #path: router-ospf.md
           type: text/markdown
        state: in_progress
        other:
          comments: attached router ospf report
      delegate_to: localhost
      run_once: True

