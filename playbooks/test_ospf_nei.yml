---
- name: test ospf in CML
  hosts: routers
  gather_facts: false
  vars:
    ospf_nei_data: {}
    no_ospf_nei_dict: {"interfaces": { "No OSPF int found": {"neighbors":{"No Neighbors Found":{"state":"None"}}}}}

  tasks:
    - name: set file path
      set_fact:
        file_path: "router-ospf.md"
      run_once: True

    - name: set file path
      set_stats:
        data:
          attachment_path: "{{ file_path }}"
      run_once: True

    - name: create documentation file
      ansible.builtin.file:
        path: "{{ file_path }}"
        state: touch
      run_once: True
  
    - name: parse show ip ospf neighbors
      ansible.utils.cli_parse:
        command: show ip ospf neighbor
        parser:
          name: ansible.netcommon.pyats
        set_fact: ospf_neighbors
      ignore_errors: true


    - name: determine if there are ospf neighbors
      block:
        # - name: check if error is returned for ospf neighbors
        #   debug:
        #     msg: "{{ ospf_neighbors['interfaces'] }}"
        - name: collect relevant interface data to create a report
          set_fact:
            ospf_neighbors: "{{ ospf_neighbors }}"
      rescue:
        - name: print which device has errors on show ip ospf neighbors
          debug:
            msg: "{{ inventory_hostname }} did not return ospf neighbors"
        - set_fact:
            ospf_neighbors: "{{ ospf_neighbors | default ({}) | combine(no_ospf_nei_dict) }}"

    - name: add dict keys for router names
      set_fact:
        hostname_ospf_data: "{{ ospf_nei_data | combine({inventory_hostname: ospf_neighbors.interfaces }) }}"

    - name: create one dictionary of ospf neighbor data
      set_fact:
        ospf_nei_data: "{{ ospf_nei_data | combine(item) }}"
      loop: >-
        {{
          groups['routers']
          | map("extract", hostvars)
          | map(attribute="hostname_ospf_data")
          | list
          }}
      run_once: True
    
    - name: print dict
      debug:
        var: ospf_nei_data
      run_once: True

    - name: make ospf nei document
      ansible.builtin.template:
        src: templates/rtr-ospf-nei.j2
        dest: documentation/rtr-ospf-report.md
      run_once: True

    #- name: create document
    #  ansible.builtin.blockinfile:
    #    block: "{{ lookup('ansible.builtin.template', 'templates/rtr-ospf-nei.j2') }}"
    #    dest: "{{ file_path }}"
    #    marker: "{mark}"
    #    marker_begin: "router: {{inventory_hostname }}"
    #    marker_end: "****"
    #    insertafter: EOF
#