---
- name: test ospf in CML
  hosts: routers
  gather_facts: false
  vars:
    ospf_nei_data: {}
    no_ospf_nei_dict: {"interfaces": { "No OSPF int found": {"neighbors":{"No Neighbors Found":{"state":"None"}}}}}

  tasks:
    - name: parse show ip ospf neighbors
      ansible.utils.cli_parse:
        command: show ip ospf neighbor
        parser:
          name: ansible.netcommon.pyats
        set_fact: ospf_neighbors
      ignore_errors: true


    - name: determine if there are ospf neighbors
      block:
        - name: collect relevant interface data to create a report
          set_fact:
            ospf_neighbors: "{{ ospf_neighbors }}"
      rescue:
        - name: if router has no neighbors create custom error dict
          set_fact:
            ospf_neighbors: "{{ ospf_neighbors | default ({}) | combine(no_ospf_nei_dict) }}"

    - name: add dict keys for router names
      set_fact:
        hostname_ospf_data: "{{ ospf_nei_data | combine({inventory_hostname: ospf_neighbors.interfaces }) }}"

    - name: create one dictionary of ospf neighbor data
      set_fact:
        ospf_nei_data: "{{ ospf_nei_data | combine(item) }}"
      loop: >-
        {{
          groups['routers']
          | map("extract", hostvars)
          | map(attribute="hostname_ospf_data")
          | list
          }}
      run_once: True

    - name: set stats to send ospf nei info to workflow
      set_stats:
        data:
          ospf_nei_data: "{{ ospf_nei_data }}"


